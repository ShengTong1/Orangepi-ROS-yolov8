// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: MxpiOSDType.proto
// Protobuf C++ Version: 5.29.4

#ifndef MxpiOSDType_2eproto_2epb_2eh
#define MxpiOSDType_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "MxpiDataType.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_MxpiOSDType_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_MxpiOSDType_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_MxpiOSDType_2eproto;
namespace MxTools {
class MxpiOsdCircle;
struct MxpiOsdCircleDefaultTypeInternal;
extern MxpiOsdCircleDefaultTypeInternal _MxpiOsdCircle_default_instance_;
class MxpiOsdInstances;
struct MxpiOsdInstancesDefaultTypeInternal;
extern MxpiOsdInstancesDefaultTypeInternal _MxpiOsdInstances_default_instance_;
class MxpiOsdInstancesList;
struct MxpiOsdInstancesListDefaultTypeInternal;
extern MxpiOsdInstancesListDefaultTypeInternal _MxpiOsdInstancesList_default_instance_;
class MxpiOsdLine;
struct MxpiOsdLineDefaultTypeInternal;
extern MxpiOsdLineDefaultTypeInternal _MxpiOsdLine_default_instance_;
class MxpiOsdParams;
struct MxpiOsdParamsDefaultTypeInternal;
extern MxpiOsdParamsDefaultTypeInternal _MxpiOsdParams_default_instance_;
class MxpiOsdRect;
struct MxpiOsdRectDefaultTypeInternal;
extern MxpiOsdRectDefaultTypeInternal _MxpiOsdRect_default_instance_;
class MxpiOsdText;
struct MxpiOsdTextDefaultTypeInternal;
extern MxpiOsdTextDefaultTypeInternal _MxpiOsdText_default_instance_;
}  // namespace MxTools
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace MxTools {

// ===================================================================


// -------------------------------------------------------------------

class MxpiOsdParams final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MxTools.MxpiOsdParams) */ {
 public:
  inline MxpiOsdParams() : MxpiOsdParams(nullptr) {}
  ~MxpiOsdParams() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MxpiOsdParams* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MxpiOsdParams));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MxpiOsdParams(
      ::google::protobuf::internal::ConstantInitialized);

  inline MxpiOsdParams(const MxpiOsdParams& from) : MxpiOsdParams(nullptr, from) {}
  inline MxpiOsdParams(MxpiOsdParams&& from) noexcept
      : MxpiOsdParams(nullptr, std::move(from)) {}
  inline MxpiOsdParams& operator=(const MxpiOsdParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MxpiOsdParams& operator=(MxpiOsdParams&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MxpiOsdParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MxpiOsdParams* internal_default_instance() {
    return reinterpret_cast<const MxpiOsdParams*>(
        &_MxpiOsdParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(MxpiOsdParams& a, MxpiOsdParams& b) { a.Swap(&b); }
  inline void Swap(MxpiOsdParams* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MxpiOsdParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MxpiOsdParams* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MxpiOsdParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MxpiOsdParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MxpiOsdParams& from) { MxpiOsdParams::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MxpiOsdParams* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "MxTools.MxpiOsdParams"; }

 protected:
  explicit MxpiOsdParams(::google::protobuf::Arena* arena);
  MxpiOsdParams(::google::protobuf::Arena* arena, const MxpiOsdParams& from);
  MxpiOsdParams(::google::protobuf::Arena* arena, MxpiOsdParams&& from) noexcept
      : MxpiOsdParams(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kScalorBFieldNumber = 1,
    kScalorGFieldNumber = 2,
    kScalorRFieldNumber = 3,
    kThicknessFieldNumber = 4,
    kLineTypeFieldNumber = 5,
    kShiftFieldNumber = 6,
  };
  // uint32 scalorB = 1;
  void clear_scalorb() ;
  ::uint32_t scalorb() const;
  void set_scalorb(::uint32_t value);

  private:
  ::uint32_t _internal_scalorb() const;
  void _internal_set_scalorb(::uint32_t value);

  public:
  // uint32 scalorG = 2;
  void clear_scalorg() ;
  ::uint32_t scalorg() const;
  void set_scalorg(::uint32_t value);

  private:
  ::uint32_t _internal_scalorg() const;
  void _internal_set_scalorg(::uint32_t value);

  public:
  // uint32 scalorR = 3;
  void clear_scalorr() ;
  ::uint32_t scalorr() const;
  void set_scalorr(::uint32_t value);

  private:
  ::uint32_t _internal_scalorr() const;
  void _internal_set_scalorr(::uint32_t value);

  public:
  // int32 thickness = 4;
  void clear_thickness() ;
  ::int32_t thickness() const;
  void set_thickness(::int32_t value);

  private:
  ::int32_t _internal_thickness() const;
  void _internal_set_thickness(::int32_t value);

  public:
  // int32 lineType = 5;
  void clear_linetype() ;
  ::int32_t linetype() const;
  void set_linetype(::int32_t value);

  private:
  ::int32_t _internal_linetype() const;
  void _internal_set_linetype(::int32_t value);

  public:
  // int32 shift = 6;
  void clear_shift() ;
  ::int32_t shift() const;
  void set_shift(::int32_t value);

  private:
  ::int32_t _internal_shift() const;
  void _internal_set_shift(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MxTools.MxpiOsdParams)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MxpiOsdParams& from_msg);
    ::uint32_t scalorb_;
    ::uint32_t scalorg_;
    ::uint32_t scalorr_;
    ::int32_t thickness_;
    ::int32_t linetype_;
    ::int32_t shift_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MxpiOSDType_2eproto;
};
// -------------------------------------------------------------------

class MxpiOsdText final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MxTools.MxpiOsdText) */ {
 public:
  inline MxpiOsdText() : MxpiOsdText(nullptr) {}
  ~MxpiOsdText() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MxpiOsdText* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MxpiOsdText));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MxpiOsdText(
      ::google::protobuf::internal::ConstantInitialized);

  inline MxpiOsdText(const MxpiOsdText& from) : MxpiOsdText(nullptr, from) {}
  inline MxpiOsdText(MxpiOsdText&& from) noexcept
      : MxpiOsdText(nullptr, std::move(from)) {}
  inline MxpiOsdText& operator=(const MxpiOsdText& from) {
    CopyFrom(from);
    return *this;
  }
  inline MxpiOsdText& operator=(MxpiOsdText&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MxpiOsdText& default_instance() {
    return *internal_default_instance();
  }
  static inline const MxpiOsdText* internal_default_instance() {
    return reinterpret_cast<const MxpiOsdText*>(
        &_MxpiOsdText_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MxpiOsdText& a, MxpiOsdText& b) { a.Swap(&b); }
  inline void Swap(MxpiOsdText* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MxpiOsdText* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MxpiOsdText* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MxpiOsdText>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MxpiOsdText& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MxpiOsdText& from) { MxpiOsdText::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MxpiOsdText* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "MxTools.MxpiOsdText"; }

 protected:
  explicit MxpiOsdText(::google::protobuf::Arena* arena);
  MxpiOsdText(::google::protobuf::Arena* arena, const MxpiOsdText& from);
  MxpiOsdText(::google::protobuf::Arena* arena, MxpiOsdText&& from) noexcept
      : MxpiOsdText(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderVecFieldNumber = 1,
    kTextFieldNumber = 2,
    kOsdParamsFieldNumber = 8,
    kX0FieldNumber = 3,
    kY0FieldNumber = 4,
    kFontScaleFieldNumber = 6,
    kFontFaceFieldNumber = 5,
    kBottomLeftOriginFieldNumber = 7,
    kFixedAreaFieldNumber = 9,
  };
  // repeated .MxTools.MxpiMetaHeader headerVec = 1;
  int headervec_size() const;
  private:
  int _internal_headervec_size() const;

  public:
  void clear_headervec() ;
  ::MxTools::MxpiMetaHeader* mutable_headervec(int index);
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>* mutable_headervec();

  private:
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>& _internal_headervec() const;
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>* _internal_mutable_headervec();
  public:
  const ::MxTools::MxpiMetaHeader& headervec(int index) const;
  ::MxTools::MxpiMetaHeader* add_headervec();
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>& headervec() const;
  // string text = 2;
  void clear_text() ;
  const std::string& text() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_text(Arg_&& arg, Args_... args);
  std::string* mutable_text();
  PROTOBUF_NODISCARD std::string* release_text();
  void set_allocated_text(std::string* value);

  private:
  const std::string& _internal_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_text(
      const std::string& value);
  std::string* _internal_mutable_text();

  public:
  // .MxTools.MxpiOsdParams osdParams = 8;
  bool has_osdparams() const;
  void clear_osdparams() ;
  const ::MxTools::MxpiOsdParams& osdparams() const;
  PROTOBUF_NODISCARD ::MxTools::MxpiOsdParams* release_osdparams();
  ::MxTools::MxpiOsdParams* mutable_osdparams();
  void set_allocated_osdparams(::MxTools::MxpiOsdParams* value);
  void unsafe_arena_set_allocated_osdparams(::MxTools::MxpiOsdParams* value);
  ::MxTools::MxpiOsdParams* unsafe_arena_release_osdparams();

  private:
  const ::MxTools::MxpiOsdParams& _internal_osdparams() const;
  ::MxTools::MxpiOsdParams* _internal_mutable_osdparams();

  public:
  // int32 x0 = 3;
  void clear_x0() ;
  ::int32_t x0() const;
  void set_x0(::int32_t value);

  private:
  ::int32_t _internal_x0() const;
  void _internal_set_x0(::int32_t value);

  public:
  // int32 y0 = 4;
  void clear_y0() ;
  ::int32_t y0() const;
  void set_y0(::int32_t value);

  private:
  ::int32_t _internal_y0() const;
  void _internal_set_y0(::int32_t value);

  public:
  // double fontScale = 6;
  void clear_fontscale() ;
  double fontscale() const;
  void set_fontscale(double value);

  private:
  double _internal_fontscale() const;
  void _internal_set_fontscale(double value);

  public:
  // int32 fontFace = 5;
  void clear_fontface() ;
  ::int32_t fontface() const;
  void set_fontface(::int32_t value);

  private:
  ::int32_t _internal_fontface() const;
  void _internal_set_fontface(::int32_t value);

  public:
  // bool bottomLeftOrigin = 7;
  void clear_bottomleftorigin() ;
  bool bottomleftorigin() const;
  void set_bottomleftorigin(bool value);

  private:
  bool _internal_bottomleftorigin() const;
  void _internal_set_bottomleftorigin(bool value);

  public:
  // bool fixedArea = 9;
  void clear_fixedarea() ;
  bool fixedarea() const;
  void set_fixedarea(bool value);

  private:
  bool _internal_fixedarea() const;
  void _internal_set_fixedarea(bool value);

  public:
  // @@protoc_insertion_point(class_scope:MxTools.MxpiOsdText)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 2,
      40, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MxpiOsdText& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::MxTools::MxpiMetaHeader > headervec_;
    ::google::protobuf::internal::ArenaStringPtr text_;
    ::MxTools::MxpiOsdParams* osdparams_;
    ::int32_t x0_;
    ::int32_t y0_;
    double fontscale_;
    ::int32_t fontface_;
    bool bottomleftorigin_;
    bool fixedarea_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MxpiOSDType_2eproto;
};
// -------------------------------------------------------------------

class MxpiOsdRect final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MxTools.MxpiOsdRect) */ {
 public:
  inline MxpiOsdRect() : MxpiOsdRect(nullptr) {}
  ~MxpiOsdRect() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MxpiOsdRect* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MxpiOsdRect));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MxpiOsdRect(
      ::google::protobuf::internal::ConstantInitialized);

  inline MxpiOsdRect(const MxpiOsdRect& from) : MxpiOsdRect(nullptr, from) {}
  inline MxpiOsdRect(MxpiOsdRect&& from) noexcept
      : MxpiOsdRect(nullptr, std::move(from)) {}
  inline MxpiOsdRect& operator=(const MxpiOsdRect& from) {
    CopyFrom(from);
    return *this;
  }
  inline MxpiOsdRect& operator=(MxpiOsdRect&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MxpiOsdRect& default_instance() {
    return *internal_default_instance();
  }
  static inline const MxpiOsdRect* internal_default_instance() {
    return reinterpret_cast<const MxpiOsdRect*>(
        &_MxpiOsdRect_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MxpiOsdRect& a, MxpiOsdRect& b) { a.Swap(&b); }
  inline void Swap(MxpiOsdRect* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MxpiOsdRect* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MxpiOsdRect* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MxpiOsdRect>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MxpiOsdRect& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MxpiOsdRect& from) { MxpiOsdRect::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MxpiOsdRect* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "MxTools.MxpiOsdRect"; }

 protected:
  explicit MxpiOsdRect(::google::protobuf::Arena* arena);
  MxpiOsdRect(::google::protobuf::Arena* arena, const MxpiOsdRect& from);
  MxpiOsdRect(::google::protobuf::Arena* arena, MxpiOsdRect&& from) noexcept
      : MxpiOsdRect(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderVecFieldNumber = 1,
    kOsdParamsFieldNumber = 6,
    kX0FieldNumber = 2,
    kY0FieldNumber = 3,
    kX1FieldNumber = 4,
    kY1FieldNumber = 5,
    kFixedAreaFieldNumber = 7,
  };
  // repeated .MxTools.MxpiMetaHeader headerVec = 1;
  int headervec_size() const;
  private:
  int _internal_headervec_size() const;

  public:
  void clear_headervec() ;
  ::MxTools::MxpiMetaHeader* mutable_headervec(int index);
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>* mutable_headervec();

  private:
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>& _internal_headervec() const;
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>* _internal_mutable_headervec();
  public:
  const ::MxTools::MxpiMetaHeader& headervec(int index) const;
  ::MxTools::MxpiMetaHeader* add_headervec();
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>& headervec() const;
  // .MxTools.MxpiOsdParams osdParams = 6;
  bool has_osdparams() const;
  void clear_osdparams() ;
  const ::MxTools::MxpiOsdParams& osdparams() const;
  PROTOBUF_NODISCARD ::MxTools::MxpiOsdParams* release_osdparams();
  ::MxTools::MxpiOsdParams* mutable_osdparams();
  void set_allocated_osdparams(::MxTools::MxpiOsdParams* value);
  void unsafe_arena_set_allocated_osdparams(::MxTools::MxpiOsdParams* value);
  ::MxTools::MxpiOsdParams* unsafe_arena_release_osdparams();

  private:
  const ::MxTools::MxpiOsdParams& _internal_osdparams() const;
  ::MxTools::MxpiOsdParams* _internal_mutable_osdparams();

  public:
  // int32 x0 = 2;
  void clear_x0() ;
  ::int32_t x0() const;
  void set_x0(::int32_t value);

  private:
  ::int32_t _internal_x0() const;
  void _internal_set_x0(::int32_t value);

  public:
  // int32 y0 = 3;
  void clear_y0() ;
  ::int32_t y0() const;
  void set_y0(::int32_t value);

  private:
  ::int32_t _internal_y0() const;
  void _internal_set_y0(::int32_t value);

  public:
  // int32 x1 = 4;
  void clear_x1() ;
  ::int32_t x1() const;
  void set_x1(::int32_t value);

  private:
  ::int32_t _internal_x1() const;
  void _internal_set_x1(::int32_t value);

  public:
  // int32 y1 = 5;
  void clear_y1() ;
  ::int32_t y1() const;
  void set_y1(::int32_t value);

  private:
  ::int32_t _internal_y1() const;
  void _internal_set_y1(::int32_t value);

  public:
  // bool fixedArea = 7;
  void clear_fixedarea() ;
  bool fixedarea() const;
  void set_fixedarea(bool value);

  private:
  bool _internal_fixedarea() const;
  void _internal_set_fixedarea(bool value);

  public:
  // @@protoc_insertion_point(class_scope:MxTools.MxpiOsdRect)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MxpiOsdRect& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::MxTools::MxpiMetaHeader > headervec_;
    ::MxTools::MxpiOsdParams* osdparams_;
    ::int32_t x0_;
    ::int32_t y0_;
    ::int32_t x1_;
    ::int32_t y1_;
    bool fixedarea_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MxpiOSDType_2eproto;
};
// -------------------------------------------------------------------

class MxpiOsdLine final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MxTools.MxpiOsdLine) */ {
 public:
  inline MxpiOsdLine() : MxpiOsdLine(nullptr) {}
  ~MxpiOsdLine() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MxpiOsdLine* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MxpiOsdLine));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MxpiOsdLine(
      ::google::protobuf::internal::ConstantInitialized);

  inline MxpiOsdLine(const MxpiOsdLine& from) : MxpiOsdLine(nullptr, from) {}
  inline MxpiOsdLine(MxpiOsdLine&& from) noexcept
      : MxpiOsdLine(nullptr, std::move(from)) {}
  inline MxpiOsdLine& operator=(const MxpiOsdLine& from) {
    CopyFrom(from);
    return *this;
  }
  inline MxpiOsdLine& operator=(MxpiOsdLine&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MxpiOsdLine& default_instance() {
    return *internal_default_instance();
  }
  static inline const MxpiOsdLine* internal_default_instance() {
    return reinterpret_cast<const MxpiOsdLine*>(
        &_MxpiOsdLine_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MxpiOsdLine& a, MxpiOsdLine& b) { a.Swap(&b); }
  inline void Swap(MxpiOsdLine* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MxpiOsdLine* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MxpiOsdLine* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MxpiOsdLine>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MxpiOsdLine& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MxpiOsdLine& from) { MxpiOsdLine::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MxpiOsdLine* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "MxTools.MxpiOsdLine"; }

 protected:
  explicit MxpiOsdLine(::google::protobuf::Arena* arena);
  MxpiOsdLine(::google::protobuf::Arena* arena, const MxpiOsdLine& from);
  MxpiOsdLine(::google::protobuf::Arena* arena, MxpiOsdLine&& from) noexcept
      : MxpiOsdLine(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderVecFieldNumber = 1,
    kOsdParamsFieldNumber = 6,
    kX0FieldNumber = 2,
    kY0FieldNumber = 3,
    kX1FieldNumber = 4,
    kY1FieldNumber = 5,
  };
  // repeated .MxTools.MxpiMetaHeader headerVec = 1;
  int headervec_size() const;
  private:
  int _internal_headervec_size() const;

  public:
  void clear_headervec() ;
  ::MxTools::MxpiMetaHeader* mutable_headervec(int index);
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>* mutable_headervec();

  private:
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>& _internal_headervec() const;
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>* _internal_mutable_headervec();
  public:
  const ::MxTools::MxpiMetaHeader& headervec(int index) const;
  ::MxTools::MxpiMetaHeader* add_headervec();
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>& headervec() const;
  // .MxTools.MxpiOsdParams osdParams = 6;
  bool has_osdparams() const;
  void clear_osdparams() ;
  const ::MxTools::MxpiOsdParams& osdparams() const;
  PROTOBUF_NODISCARD ::MxTools::MxpiOsdParams* release_osdparams();
  ::MxTools::MxpiOsdParams* mutable_osdparams();
  void set_allocated_osdparams(::MxTools::MxpiOsdParams* value);
  void unsafe_arena_set_allocated_osdparams(::MxTools::MxpiOsdParams* value);
  ::MxTools::MxpiOsdParams* unsafe_arena_release_osdparams();

  private:
  const ::MxTools::MxpiOsdParams& _internal_osdparams() const;
  ::MxTools::MxpiOsdParams* _internal_mutable_osdparams();

  public:
  // int32 x0 = 2;
  void clear_x0() ;
  ::int32_t x0() const;
  void set_x0(::int32_t value);

  private:
  ::int32_t _internal_x0() const;
  void _internal_set_x0(::int32_t value);

  public:
  // int32 y0 = 3;
  void clear_y0() ;
  ::int32_t y0() const;
  void set_y0(::int32_t value);

  private:
  ::int32_t _internal_y0() const;
  void _internal_set_y0(::int32_t value);

  public:
  // int32 x1 = 4;
  void clear_x1() ;
  ::int32_t x1() const;
  void set_x1(::int32_t value);

  private:
  ::int32_t _internal_x1() const;
  void _internal_set_x1(::int32_t value);

  public:
  // int32 y1 = 5;
  void clear_y1() ;
  ::int32_t y1() const;
  void set_y1(::int32_t value);

  private:
  ::int32_t _internal_y1() const;
  void _internal_set_y1(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MxTools.MxpiOsdLine)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MxpiOsdLine& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::MxTools::MxpiMetaHeader > headervec_;
    ::MxTools::MxpiOsdParams* osdparams_;
    ::int32_t x0_;
    ::int32_t y0_;
    ::int32_t x1_;
    ::int32_t y1_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MxpiOSDType_2eproto;
};
// -------------------------------------------------------------------

class MxpiOsdCircle final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MxTools.MxpiOsdCircle) */ {
 public:
  inline MxpiOsdCircle() : MxpiOsdCircle(nullptr) {}
  ~MxpiOsdCircle() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MxpiOsdCircle* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MxpiOsdCircle));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MxpiOsdCircle(
      ::google::protobuf::internal::ConstantInitialized);

  inline MxpiOsdCircle(const MxpiOsdCircle& from) : MxpiOsdCircle(nullptr, from) {}
  inline MxpiOsdCircle(MxpiOsdCircle&& from) noexcept
      : MxpiOsdCircle(nullptr, std::move(from)) {}
  inline MxpiOsdCircle& operator=(const MxpiOsdCircle& from) {
    CopyFrom(from);
    return *this;
  }
  inline MxpiOsdCircle& operator=(MxpiOsdCircle&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MxpiOsdCircle& default_instance() {
    return *internal_default_instance();
  }
  static inline const MxpiOsdCircle* internal_default_instance() {
    return reinterpret_cast<const MxpiOsdCircle*>(
        &_MxpiOsdCircle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(MxpiOsdCircle& a, MxpiOsdCircle& b) { a.Swap(&b); }
  inline void Swap(MxpiOsdCircle* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MxpiOsdCircle* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MxpiOsdCircle* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MxpiOsdCircle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MxpiOsdCircle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MxpiOsdCircle& from) { MxpiOsdCircle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MxpiOsdCircle* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "MxTools.MxpiOsdCircle"; }

 protected:
  explicit MxpiOsdCircle(::google::protobuf::Arena* arena);
  MxpiOsdCircle(::google::protobuf::Arena* arena, const MxpiOsdCircle& from);
  MxpiOsdCircle(::google::protobuf::Arena* arena, MxpiOsdCircle&& from) noexcept
      : MxpiOsdCircle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderVecFieldNumber = 1,
    kOsdParamsFieldNumber = 5,
    kX0FieldNumber = 2,
    kY0FieldNumber = 3,
    kRadiusFieldNumber = 4,
  };
  // repeated .MxTools.MxpiMetaHeader headerVec = 1;
  int headervec_size() const;
  private:
  int _internal_headervec_size() const;

  public:
  void clear_headervec() ;
  ::MxTools::MxpiMetaHeader* mutable_headervec(int index);
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>* mutable_headervec();

  private:
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>& _internal_headervec() const;
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>* _internal_mutable_headervec();
  public:
  const ::MxTools::MxpiMetaHeader& headervec(int index) const;
  ::MxTools::MxpiMetaHeader* add_headervec();
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>& headervec() const;
  // .MxTools.MxpiOsdParams osdParams = 5;
  bool has_osdparams() const;
  void clear_osdparams() ;
  const ::MxTools::MxpiOsdParams& osdparams() const;
  PROTOBUF_NODISCARD ::MxTools::MxpiOsdParams* release_osdparams();
  ::MxTools::MxpiOsdParams* mutable_osdparams();
  void set_allocated_osdparams(::MxTools::MxpiOsdParams* value);
  void unsafe_arena_set_allocated_osdparams(::MxTools::MxpiOsdParams* value);
  ::MxTools::MxpiOsdParams* unsafe_arena_release_osdparams();

  private:
  const ::MxTools::MxpiOsdParams& _internal_osdparams() const;
  ::MxTools::MxpiOsdParams* _internal_mutable_osdparams();

  public:
  // int32 x0 = 2;
  void clear_x0() ;
  ::int32_t x0() const;
  void set_x0(::int32_t value);

  private:
  ::int32_t _internal_x0() const;
  void _internal_set_x0(::int32_t value);

  public:
  // int32 y0 = 3;
  void clear_y0() ;
  ::int32_t y0() const;
  void set_y0(::int32_t value);

  private:
  ::int32_t _internal_y0() const;
  void _internal_set_y0(::int32_t value);

  public:
  // int32 radius = 4;
  void clear_radius() ;
  ::int32_t radius() const;
  void set_radius(::int32_t value);

  private:
  ::int32_t _internal_radius() const;
  void _internal_set_radius(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MxTools.MxpiOsdCircle)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MxpiOsdCircle& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::MxTools::MxpiMetaHeader > headervec_;
    ::MxTools::MxpiOsdParams* osdparams_;
    ::int32_t x0_;
    ::int32_t y0_;
    ::int32_t radius_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MxpiOSDType_2eproto;
};
// -------------------------------------------------------------------

class MxpiOsdInstances final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MxTools.MxpiOsdInstances) */ {
 public:
  inline MxpiOsdInstances() : MxpiOsdInstances(nullptr) {}
  ~MxpiOsdInstances() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MxpiOsdInstances* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MxpiOsdInstances));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MxpiOsdInstances(
      ::google::protobuf::internal::ConstantInitialized);

  inline MxpiOsdInstances(const MxpiOsdInstances& from) : MxpiOsdInstances(nullptr, from) {}
  inline MxpiOsdInstances(MxpiOsdInstances&& from) noexcept
      : MxpiOsdInstances(nullptr, std::move(from)) {}
  inline MxpiOsdInstances& operator=(const MxpiOsdInstances& from) {
    CopyFrom(from);
    return *this;
  }
  inline MxpiOsdInstances& operator=(MxpiOsdInstances&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MxpiOsdInstances& default_instance() {
    return *internal_default_instance();
  }
  static inline const MxpiOsdInstances* internal_default_instance() {
    return reinterpret_cast<const MxpiOsdInstances*>(
        &_MxpiOsdInstances_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MxpiOsdInstances& a, MxpiOsdInstances& b) { a.Swap(&b); }
  inline void Swap(MxpiOsdInstances* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MxpiOsdInstances* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MxpiOsdInstances* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MxpiOsdInstances>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MxpiOsdInstances& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MxpiOsdInstances& from) { MxpiOsdInstances::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MxpiOsdInstances* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "MxTools.MxpiOsdInstances"; }

 protected:
  explicit MxpiOsdInstances(::google::protobuf::Arena* arena);
  MxpiOsdInstances(::google::protobuf::Arena* arena, const MxpiOsdInstances& from);
  MxpiOsdInstances(::google::protobuf::Arena* arena, MxpiOsdInstances&& from) noexcept
      : MxpiOsdInstances(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderVecFieldNumber = 1,
    kOsdTextVecFieldNumber = 2,
    kOsdLineVecFieldNumber = 3,
    kOsdRectVecFieldNumber = 4,
    kOsdCircleVecFieldNumber = 5,
  };
  // repeated .MxTools.MxpiMetaHeader headerVec = 1;
  int headervec_size() const;
  private:
  int _internal_headervec_size() const;

  public:
  void clear_headervec() ;
  ::MxTools::MxpiMetaHeader* mutable_headervec(int index);
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>* mutable_headervec();

  private:
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>& _internal_headervec() const;
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>* _internal_mutable_headervec();
  public:
  const ::MxTools::MxpiMetaHeader& headervec(int index) const;
  ::MxTools::MxpiMetaHeader* add_headervec();
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>& headervec() const;
  // repeated .MxTools.MxpiOsdText osdTextVec = 2;
  int osdtextvec_size() const;
  private:
  int _internal_osdtextvec_size() const;

  public:
  void clear_osdtextvec() ;
  ::MxTools::MxpiOsdText* mutable_osdtextvec(int index);
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdText>* mutable_osdtextvec();

  private:
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdText>& _internal_osdtextvec() const;
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdText>* _internal_mutable_osdtextvec();
  public:
  const ::MxTools::MxpiOsdText& osdtextvec(int index) const;
  ::MxTools::MxpiOsdText* add_osdtextvec();
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdText>& osdtextvec() const;
  // repeated .MxTools.MxpiOsdLine osdLineVec = 3;
  int osdlinevec_size() const;
  private:
  int _internal_osdlinevec_size() const;

  public:
  void clear_osdlinevec() ;
  ::MxTools::MxpiOsdLine* mutable_osdlinevec(int index);
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdLine>* mutable_osdlinevec();

  private:
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdLine>& _internal_osdlinevec() const;
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdLine>* _internal_mutable_osdlinevec();
  public:
  const ::MxTools::MxpiOsdLine& osdlinevec(int index) const;
  ::MxTools::MxpiOsdLine* add_osdlinevec();
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdLine>& osdlinevec() const;
  // repeated .MxTools.MxpiOsdRect osdRectVec = 4;
  int osdrectvec_size() const;
  private:
  int _internal_osdrectvec_size() const;

  public:
  void clear_osdrectvec() ;
  ::MxTools::MxpiOsdRect* mutable_osdrectvec(int index);
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdRect>* mutable_osdrectvec();

  private:
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdRect>& _internal_osdrectvec() const;
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdRect>* _internal_mutable_osdrectvec();
  public:
  const ::MxTools::MxpiOsdRect& osdrectvec(int index) const;
  ::MxTools::MxpiOsdRect* add_osdrectvec();
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdRect>& osdrectvec() const;
  // repeated .MxTools.MxpiOsdCircle osdCircleVec = 5;
  int osdcirclevec_size() const;
  private:
  int _internal_osdcirclevec_size() const;

  public:
  void clear_osdcirclevec() ;
  ::MxTools::MxpiOsdCircle* mutable_osdcirclevec(int index);
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdCircle>* mutable_osdcirclevec();

  private:
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdCircle>& _internal_osdcirclevec() const;
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdCircle>* _internal_mutable_osdcirclevec();
  public:
  const ::MxTools::MxpiOsdCircle& osdcirclevec(int index) const;
  ::MxTools::MxpiOsdCircle* add_osdcirclevec();
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdCircle>& osdcirclevec() const;
  // @@protoc_insertion_point(class_scope:MxTools.MxpiOsdInstances)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 5,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MxpiOsdInstances& from_msg);
    ::google::protobuf::RepeatedPtrField< ::MxTools::MxpiMetaHeader > headervec_;
    ::google::protobuf::RepeatedPtrField< ::MxTools::MxpiOsdText > osdtextvec_;
    ::google::protobuf::RepeatedPtrField< ::MxTools::MxpiOsdLine > osdlinevec_;
    ::google::protobuf::RepeatedPtrField< ::MxTools::MxpiOsdRect > osdrectvec_;
    ::google::protobuf::RepeatedPtrField< ::MxTools::MxpiOsdCircle > osdcirclevec_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MxpiOSDType_2eproto;
};
// -------------------------------------------------------------------

class MxpiOsdInstancesList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MxTools.MxpiOsdInstancesList) */ {
 public:
  inline MxpiOsdInstancesList() : MxpiOsdInstancesList(nullptr) {}
  ~MxpiOsdInstancesList() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MxpiOsdInstancesList* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MxpiOsdInstancesList));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MxpiOsdInstancesList(
      ::google::protobuf::internal::ConstantInitialized);

  inline MxpiOsdInstancesList(const MxpiOsdInstancesList& from) : MxpiOsdInstancesList(nullptr, from) {}
  inline MxpiOsdInstancesList(MxpiOsdInstancesList&& from) noexcept
      : MxpiOsdInstancesList(nullptr, std::move(from)) {}
  inline MxpiOsdInstancesList& operator=(const MxpiOsdInstancesList& from) {
    CopyFrom(from);
    return *this;
  }
  inline MxpiOsdInstancesList& operator=(MxpiOsdInstancesList&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MxpiOsdInstancesList& default_instance() {
    return *internal_default_instance();
  }
  static inline const MxpiOsdInstancesList* internal_default_instance() {
    return reinterpret_cast<const MxpiOsdInstancesList*>(
        &_MxpiOsdInstancesList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MxpiOsdInstancesList& a, MxpiOsdInstancesList& b) { a.Swap(&b); }
  inline void Swap(MxpiOsdInstancesList* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MxpiOsdInstancesList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MxpiOsdInstancesList* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MxpiOsdInstancesList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MxpiOsdInstancesList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MxpiOsdInstancesList& from) { MxpiOsdInstancesList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MxpiOsdInstancesList* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "MxTools.MxpiOsdInstancesList"; }

 protected:
  explicit MxpiOsdInstancesList(::google::protobuf::Arena* arena);
  MxpiOsdInstancesList(::google::protobuf::Arena* arena, const MxpiOsdInstancesList& from);
  MxpiOsdInstancesList(::google::protobuf::Arena* arena, MxpiOsdInstancesList&& from) noexcept
      : MxpiOsdInstancesList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOsdInstancesVecFieldNumber = 1,
  };
  // repeated .MxTools.MxpiOsdInstances osdInstancesVec = 1;
  int osdinstancesvec_size() const;
  private:
  int _internal_osdinstancesvec_size() const;

  public:
  void clear_osdinstancesvec() ;
  ::MxTools::MxpiOsdInstances* mutable_osdinstancesvec(int index);
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdInstances>* mutable_osdinstancesvec();

  private:
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdInstances>& _internal_osdinstancesvec() const;
  ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdInstances>* _internal_mutable_osdinstancesvec();
  public:
  const ::MxTools::MxpiOsdInstances& osdinstancesvec(int index) const;
  ::MxTools::MxpiOsdInstances* add_osdinstancesvec();
  const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdInstances>& osdinstancesvec() const;
  // @@protoc_insertion_point(class_scope:MxTools.MxpiOsdInstancesList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MxpiOsdInstancesList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::MxTools::MxpiOsdInstances > osdinstancesvec_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MxpiOSDType_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MxpiOsdInstancesList

// repeated .MxTools.MxpiOsdInstances osdInstancesVec = 1;
inline int MxpiOsdInstancesList::_internal_osdinstancesvec_size() const {
  return _internal_osdinstancesvec().size();
}
inline int MxpiOsdInstancesList::osdinstancesvec_size() const {
  return _internal_osdinstancesvec_size();
}
inline void MxpiOsdInstancesList::clear_osdinstancesvec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.osdinstancesvec_.Clear();
}
inline ::MxTools::MxpiOsdInstances* MxpiOsdInstancesList::mutable_osdinstancesvec(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MxTools.MxpiOsdInstancesList.osdInstancesVec)
  return _internal_mutable_osdinstancesvec()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdInstances>* MxpiOsdInstancesList::mutable_osdinstancesvec()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MxTools.MxpiOsdInstancesList.osdInstancesVec)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_osdinstancesvec();
}
inline const ::MxTools::MxpiOsdInstances& MxpiOsdInstancesList::osdinstancesvec(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdInstancesList.osdInstancesVec)
  return _internal_osdinstancesvec().Get(index);
}
inline ::MxTools::MxpiOsdInstances* MxpiOsdInstancesList::add_osdinstancesvec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MxTools::MxpiOsdInstances* _add = _internal_mutable_osdinstancesvec()->Add();
  // @@protoc_insertion_point(field_add:MxTools.MxpiOsdInstancesList.osdInstancesVec)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdInstances>& MxpiOsdInstancesList::osdinstancesvec() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MxTools.MxpiOsdInstancesList.osdInstancesVec)
  return _internal_osdinstancesvec();
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdInstances>&
MxpiOsdInstancesList::_internal_osdinstancesvec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.osdinstancesvec_;
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdInstances>*
MxpiOsdInstancesList::_internal_mutable_osdinstancesvec() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.osdinstancesvec_;
}

// -------------------------------------------------------------------

// MxpiOsdInstances

// repeated .MxTools.MxpiMetaHeader headerVec = 1;
inline int MxpiOsdInstances::_internal_headervec_size() const {
  return _internal_headervec().size();
}
inline int MxpiOsdInstances::headervec_size() const {
  return _internal_headervec_size();
}
inline ::MxTools::MxpiMetaHeader* MxpiOsdInstances::mutable_headervec(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MxTools.MxpiOsdInstances.headerVec)
  return _internal_mutable_headervec()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>* MxpiOsdInstances::mutable_headervec()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MxTools.MxpiOsdInstances.headerVec)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_headervec();
}
inline const ::MxTools::MxpiMetaHeader& MxpiOsdInstances::headervec(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdInstances.headerVec)
  return _internal_headervec().Get(index);
}
inline ::MxTools::MxpiMetaHeader* MxpiOsdInstances::add_headervec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MxTools::MxpiMetaHeader* _add = _internal_mutable_headervec()->Add();
  // @@protoc_insertion_point(field_add:MxTools.MxpiOsdInstances.headerVec)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>& MxpiOsdInstances::headervec() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MxTools.MxpiOsdInstances.headerVec)
  return _internal_headervec();
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>&
MxpiOsdInstances::_internal_headervec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.headervec_;
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>*
MxpiOsdInstances::_internal_mutable_headervec() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.headervec_;
}

// repeated .MxTools.MxpiOsdText osdTextVec = 2;
inline int MxpiOsdInstances::_internal_osdtextvec_size() const {
  return _internal_osdtextvec().size();
}
inline int MxpiOsdInstances::osdtextvec_size() const {
  return _internal_osdtextvec_size();
}
inline void MxpiOsdInstances::clear_osdtextvec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.osdtextvec_.Clear();
}
inline ::MxTools::MxpiOsdText* MxpiOsdInstances::mutable_osdtextvec(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MxTools.MxpiOsdInstances.osdTextVec)
  return _internal_mutable_osdtextvec()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdText>* MxpiOsdInstances::mutable_osdtextvec()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MxTools.MxpiOsdInstances.osdTextVec)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_osdtextvec();
}
inline const ::MxTools::MxpiOsdText& MxpiOsdInstances::osdtextvec(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdInstances.osdTextVec)
  return _internal_osdtextvec().Get(index);
}
inline ::MxTools::MxpiOsdText* MxpiOsdInstances::add_osdtextvec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MxTools::MxpiOsdText* _add = _internal_mutable_osdtextvec()->Add();
  // @@protoc_insertion_point(field_add:MxTools.MxpiOsdInstances.osdTextVec)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdText>& MxpiOsdInstances::osdtextvec() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MxTools.MxpiOsdInstances.osdTextVec)
  return _internal_osdtextvec();
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdText>&
MxpiOsdInstances::_internal_osdtextvec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.osdtextvec_;
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdText>*
MxpiOsdInstances::_internal_mutable_osdtextvec() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.osdtextvec_;
}

// repeated .MxTools.MxpiOsdLine osdLineVec = 3;
inline int MxpiOsdInstances::_internal_osdlinevec_size() const {
  return _internal_osdlinevec().size();
}
inline int MxpiOsdInstances::osdlinevec_size() const {
  return _internal_osdlinevec_size();
}
inline void MxpiOsdInstances::clear_osdlinevec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.osdlinevec_.Clear();
}
inline ::MxTools::MxpiOsdLine* MxpiOsdInstances::mutable_osdlinevec(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MxTools.MxpiOsdInstances.osdLineVec)
  return _internal_mutable_osdlinevec()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdLine>* MxpiOsdInstances::mutable_osdlinevec()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MxTools.MxpiOsdInstances.osdLineVec)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_osdlinevec();
}
inline const ::MxTools::MxpiOsdLine& MxpiOsdInstances::osdlinevec(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdInstances.osdLineVec)
  return _internal_osdlinevec().Get(index);
}
inline ::MxTools::MxpiOsdLine* MxpiOsdInstances::add_osdlinevec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MxTools::MxpiOsdLine* _add = _internal_mutable_osdlinevec()->Add();
  // @@protoc_insertion_point(field_add:MxTools.MxpiOsdInstances.osdLineVec)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdLine>& MxpiOsdInstances::osdlinevec() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MxTools.MxpiOsdInstances.osdLineVec)
  return _internal_osdlinevec();
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdLine>&
MxpiOsdInstances::_internal_osdlinevec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.osdlinevec_;
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdLine>*
MxpiOsdInstances::_internal_mutable_osdlinevec() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.osdlinevec_;
}

// repeated .MxTools.MxpiOsdRect osdRectVec = 4;
inline int MxpiOsdInstances::_internal_osdrectvec_size() const {
  return _internal_osdrectvec().size();
}
inline int MxpiOsdInstances::osdrectvec_size() const {
  return _internal_osdrectvec_size();
}
inline void MxpiOsdInstances::clear_osdrectvec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.osdrectvec_.Clear();
}
inline ::MxTools::MxpiOsdRect* MxpiOsdInstances::mutable_osdrectvec(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MxTools.MxpiOsdInstances.osdRectVec)
  return _internal_mutable_osdrectvec()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdRect>* MxpiOsdInstances::mutable_osdrectvec()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MxTools.MxpiOsdInstances.osdRectVec)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_osdrectvec();
}
inline const ::MxTools::MxpiOsdRect& MxpiOsdInstances::osdrectvec(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdInstances.osdRectVec)
  return _internal_osdrectvec().Get(index);
}
inline ::MxTools::MxpiOsdRect* MxpiOsdInstances::add_osdrectvec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MxTools::MxpiOsdRect* _add = _internal_mutable_osdrectvec()->Add();
  // @@protoc_insertion_point(field_add:MxTools.MxpiOsdInstances.osdRectVec)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdRect>& MxpiOsdInstances::osdrectvec() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MxTools.MxpiOsdInstances.osdRectVec)
  return _internal_osdrectvec();
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdRect>&
MxpiOsdInstances::_internal_osdrectvec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.osdrectvec_;
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdRect>*
MxpiOsdInstances::_internal_mutable_osdrectvec() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.osdrectvec_;
}

// repeated .MxTools.MxpiOsdCircle osdCircleVec = 5;
inline int MxpiOsdInstances::_internal_osdcirclevec_size() const {
  return _internal_osdcirclevec().size();
}
inline int MxpiOsdInstances::osdcirclevec_size() const {
  return _internal_osdcirclevec_size();
}
inline void MxpiOsdInstances::clear_osdcirclevec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.osdcirclevec_.Clear();
}
inline ::MxTools::MxpiOsdCircle* MxpiOsdInstances::mutable_osdcirclevec(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MxTools.MxpiOsdInstances.osdCircleVec)
  return _internal_mutable_osdcirclevec()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdCircle>* MxpiOsdInstances::mutable_osdcirclevec()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MxTools.MxpiOsdInstances.osdCircleVec)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_osdcirclevec();
}
inline const ::MxTools::MxpiOsdCircle& MxpiOsdInstances::osdcirclevec(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdInstances.osdCircleVec)
  return _internal_osdcirclevec().Get(index);
}
inline ::MxTools::MxpiOsdCircle* MxpiOsdInstances::add_osdcirclevec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MxTools::MxpiOsdCircle* _add = _internal_mutable_osdcirclevec()->Add();
  // @@protoc_insertion_point(field_add:MxTools.MxpiOsdInstances.osdCircleVec)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdCircle>& MxpiOsdInstances::osdcirclevec() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MxTools.MxpiOsdInstances.osdCircleVec)
  return _internal_osdcirclevec();
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdCircle>&
MxpiOsdInstances::_internal_osdcirclevec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.osdcirclevec_;
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiOsdCircle>*
MxpiOsdInstances::_internal_mutable_osdcirclevec() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.osdcirclevec_;
}

// -------------------------------------------------------------------

// MxpiOsdText

// repeated .MxTools.MxpiMetaHeader headerVec = 1;
inline int MxpiOsdText::_internal_headervec_size() const {
  return _internal_headervec().size();
}
inline int MxpiOsdText::headervec_size() const {
  return _internal_headervec_size();
}
inline ::MxTools::MxpiMetaHeader* MxpiOsdText::mutable_headervec(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MxTools.MxpiOsdText.headerVec)
  return _internal_mutable_headervec()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>* MxpiOsdText::mutable_headervec()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MxTools.MxpiOsdText.headerVec)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_headervec();
}
inline const ::MxTools::MxpiMetaHeader& MxpiOsdText::headervec(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdText.headerVec)
  return _internal_headervec().Get(index);
}
inline ::MxTools::MxpiMetaHeader* MxpiOsdText::add_headervec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MxTools::MxpiMetaHeader* _add = _internal_mutable_headervec()->Add();
  // @@protoc_insertion_point(field_add:MxTools.MxpiOsdText.headerVec)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>& MxpiOsdText::headervec() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MxTools.MxpiOsdText.headerVec)
  return _internal_headervec();
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>&
MxpiOsdText::_internal_headervec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.headervec_;
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>*
MxpiOsdText::_internal_mutable_headervec() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.headervec_;
}

// string text = 2;
inline void MxpiOsdText::clear_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.ClearToEmpty();
}
inline const std::string& MxpiOsdText::text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdText.text)
  return _internal_text();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MxpiOsdText::set_text(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdText.text)
}
inline std::string* MxpiOsdText::mutable_text() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_text();
  // @@protoc_insertion_point(field_mutable:MxTools.MxpiOsdText.text)
  return _s;
}
inline const std::string& MxpiOsdText::_internal_text() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.text_.Get();
}
inline void MxpiOsdText::_internal_set_text(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.Set(value, GetArena());
}
inline std::string* MxpiOsdText::_internal_mutable_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.text_.Mutable( GetArena());
}
inline std::string* MxpiOsdText::release_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MxTools.MxpiOsdText.text)
  return _impl_.text_.Release();
}
inline void MxpiOsdText::set_allocated_text(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.text_.IsDefault()) {
    _impl_.text_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:MxTools.MxpiOsdText.text)
}

// int32 x0 = 3;
inline void MxpiOsdText::clear_x0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x0_ = 0;
}
inline ::int32_t MxpiOsdText::x0() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdText.x0)
  return _internal_x0();
}
inline void MxpiOsdText::set_x0(::int32_t value) {
  _internal_set_x0(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdText.x0)
}
inline ::int32_t MxpiOsdText::_internal_x0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x0_;
}
inline void MxpiOsdText::_internal_set_x0(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x0_ = value;
}

// int32 y0 = 4;
inline void MxpiOsdText::clear_y0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y0_ = 0;
}
inline ::int32_t MxpiOsdText::y0() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdText.y0)
  return _internal_y0();
}
inline void MxpiOsdText::set_y0(::int32_t value) {
  _internal_set_y0(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdText.y0)
}
inline ::int32_t MxpiOsdText::_internal_y0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y0_;
}
inline void MxpiOsdText::_internal_set_y0(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y0_ = value;
}

// int32 fontFace = 5;
inline void MxpiOsdText::clear_fontface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fontface_ = 0;
}
inline ::int32_t MxpiOsdText::fontface() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdText.fontFace)
  return _internal_fontface();
}
inline void MxpiOsdText::set_fontface(::int32_t value) {
  _internal_set_fontface(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdText.fontFace)
}
inline ::int32_t MxpiOsdText::_internal_fontface() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fontface_;
}
inline void MxpiOsdText::_internal_set_fontface(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fontface_ = value;
}

// double fontScale = 6;
inline void MxpiOsdText::clear_fontscale() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fontscale_ = 0;
}
inline double MxpiOsdText::fontscale() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdText.fontScale)
  return _internal_fontscale();
}
inline void MxpiOsdText::set_fontscale(double value) {
  _internal_set_fontscale(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdText.fontScale)
}
inline double MxpiOsdText::_internal_fontscale() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fontscale_;
}
inline void MxpiOsdText::_internal_set_fontscale(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fontscale_ = value;
}

// bool bottomLeftOrigin = 7;
inline void MxpiOsdText::clear_bottomleftorigin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bottomleftorigin_ = false;
}
inline bool MxpiOsdText::bottomleftorigin() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdText.bottomLeftOrigin)
  return _internal_bottomleftorigin();
}
inline void MxpiOsdText::set_bottomleftorigin(bool value) {
  _internal_set_bottomleftorigin(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdText.bottomLeftOrigin)
}
inline bool MxpiOsdText::_internal_bottomleftorigin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bottomleftorigin_;
}
inline void MxpiOsdText::_internal_set_bottomleftorigin(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bottomleftorigin_ = value;
}

// .MxTools.MxpiOsdParams osdParams = 8;
inline bool MxpiOsdText::has_osdparams() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.osdparams_ != nullptr);
  return value;
}
inline void MxpiOsdText::clear_osdparams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.osdparams_ != nullptr) _impl_.osdparams_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::MxTools::MxpiOsdParams& MxpiOsdText::_internal_osdparams() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MxTools::MxpiOsdParams* p = _impl_.osdparams_;
  return p != nullptr ? *p : reinterpret_cast<const ::MxTools::MxpiOsdParams&>(::MxTools::_MxpiOsdParams_default_instance_);
}
inline const ::MxTools::MxpiOsdParams& MxpiOsdText::osdparams() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdText.osdParams)
  return _internal_osdparams();
}
inline void MxpiOsdText::unsafe_arena_set_allocated_osdparams(::MxTools::MxpiOsdParams* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.osdparams_);
  }
  _impl_.osdparams_ = reinterpret_cast<::MxTools::MxpiOsdParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MxTools.MxpiOsdText.osdParams)
}
inline ::MxTools::MxpiOsdParams* MxpiOsdText::release_osdparams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MxTools::MxpiOsdParams* released = _impl_.osdparams_;
  _impl_.osdparams_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::MxTools::MxpiOsdParams* MxpiOsdText::unsafe_arena_release_osdparams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MxTools.MxpiOsdText.osdParams)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MxTools::MxpiOsdParams* temp = _impl_.osdparams_;
  _impl_.osdparams_ = nullptr;
  return temp;
}
inline ::MxTools::MxpiOsdParams* MxpiOsdText::_internal_mutable_osdparams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.osdparams_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MxTools::MxpiOsdParams>(GetArena());
    _impl_.osdparams_ = reinterpret_cast<::MxTools::MxpiOsdParams*>(p);
  }
  return _impl_.osdparams_;
}
inline ::MxTools::MxpiOsdParams* MxpiOsdText::mutable_osdparams() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::MxTools::MxpiOsdParams* _msg = _internal_mutable_osdparams();
  // @@protoc_insertion_point(field_mutable:MxTools.MxpiOsdText.osdParams)
  return _msg;
}
inline void MxpiOsdText::set_allocated_osdparams(::MxTools::MxpiOsdParams* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.osdparams_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.osdparams_ = reinterpret_cast<::MxTools::MxpiOsdParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:MxTools.MxpiOsdText.osdParams)
}

// bool fixedArea = 9;
inline void MxpiOsdText::clear_fixedarea() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fixedarea_ = false;
}
inline bool MxpiOsdText::fixedarea() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdText.fixedArea)
  return _internal_fixedarea();
}
inline void MxpiOsdText::set_fixedarea(bool value) {
  _internal_set_fixedarea(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdText.fixedArea)
}
inline bool MxpiOsdText::_internal_fixedarea() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fixedarea_;
}
inline void MxpiOsdText::_internal_set_fixedarea(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fixedarea_ = value;
}

// -------------------------------------------------------------------

// MxpiOsdLine

// repeated .MxTools.MxpiMetaHeader headerVec = 1;
inline int MxpiOsdLine::_internal_headervec_size() const {
  return _internal_headervec().size();
}
inline int MxpiOsdLine::headervec_size() const {
  return _internal_headervec_size();
}
inline ::MxTools::MxpiMetaHeader* MxpiOsdLine::mutable_headervec(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MxTools.MxpiOsdLine.headerVec)
  return _internal_mutable_headervec()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>* MxpiOsdLine::mutable_headervec()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MxTools.MxpiOsdLine.headerVec)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_headervec();
}
inline const ::MxTools::MxpiMetaHeader& MxpiOsdLine::headervec(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdLine.headerVec)
  return _internal_headervec().Get(index);
}
inline ::MxTools::MxpiMetaHeader* MxpiOsdLine::add_headervec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MxTools::MxpiMetaHeader* _add = _internal_mutable_headervec()->Add();
  // @@protoc_insertion_point(field_add:MxTools.MxpiOsdLine.headerVec)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>& MxpiOsdLine::headervec() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MxTools.MxpiOsdLine.headerVec)
  return _internal_headervec();
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>&
MxpiOsdLine::_internal_headervec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.headervec_;
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>*
MxpiOsdLine::_internal_mutable_headervec() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.headervec_;
}

// int32 x0 = 2;
inline void MxpiOsdLine::clear_x0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x0_ = 0;
}
inline ::int32_t MxpiOsdLine::x0() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdLine.x0)
  return _internal_x0();
}
inline void MxpiOsdLine::set_x0(::int32_t value) {
  _internal_set_x0(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdLine.x0)
}
inline ::int32_t MxpiOsdLine::_internal_x0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x0_;
}
inline void MxpiOsdLine::_internal_set_x0(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x0_ = value;
}

// int32 y0 = 3;
inline void MxpiOsdLine::clear_y0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y0_ = 0;
}
inline ::int32_t MxpiOsdLine::y0() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdLine.y0)
  return _internal_y0();
}
inline void MxpiOsdLine::set_y0(::int32_t value) {
  _internal_set_y0(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdLine.y0)
}
inline ::int32_t MxpiOsdLine::_internal_y0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y0_;
}
inline void MxpiOsdLine::_internal_set_y0(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y0_ = value;
}

// int32 x1 = 4;
inline void MxpiOsdLine::clear_x1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x1_ = 0;
}
inline ::int32_t MxpiOsdLine::x1() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdLine.x1)
  return _internal_x1();
}
inline void MxpiOsdLine::set_x1(::int32_t value) {
  _internal_set_x1(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdLine.x1)
}
inline ::int32_t MxpiOsdLine::_internal_x1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x1_;
}
inline void MxpiOsdLine::_internal_set_x1(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x1_ = value;
}

// int32 y1 = 5;
inline void MxpiOsdLine::clear_y1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y1_ = 0;
}
inline ::int32_t MxpiOsdLine::y1() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdLine.y1)
  return _internal_y1();
}
inline void MxpiOsdLine::set_y1(::int32_t value) {
  _internal_set_y1(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdLine.y1)
}
inline ::int32_t MxpiOsdLine::_internal_y1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y1_;
}
inline void MxpiOsdLine::_internal_set_y1(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y1_ = value;
}

// .MxTools.MxpiOsdParams osdParams = 6;
inline bool MxpiOsdLine::has_osdparams() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.osdparams_ != nullptr);
  return value;
}
inline void MxpiOsdLine::clear_osdparams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.osdparams_ != nullptr) _impl_.osdparams_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::MxTools::MxpiOsdParams& MxpiOsdLine::_internal_osdparams() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MxTools::MxpiOsdParams* p = _impl_.osdparams_;
  return p != nullptr ? *p : reinterpret_cast<const ::MxTools::MxpiOsdParams&>(::MxTools::_MxpiOsdParams_default_instance_);
}
inline const ::MxTools::MxpiOsdParams& MxpiOsdLine::osdparams() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdLine.osdParams)
  return _internal_osdparams();
}
inline void MxpiOsdLine::unsafe_arena_set_allocated_osdparams(::MxTools::MxpiOsdParams* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.osdparams_);
  }
  _impl_.osdparams_ = reinterpret_cast<::MxTools::MxpiOsdParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MxTools.MxpiOsdLine.osdParams)
}
inline ::MxTools::MxpiOsdParams* MxpiOsdLine::release_osdparams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MxTools::MxpiOsdParams* released = _impl_.osdparams_;
  _impl_.osdparams_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::MxTools::MxpiOsdParams* MxpiOsdLine::unsafe_arena_release_osdparams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MxTools.MxpiOsdLine.osdParams)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MxTools::MxpiOsdParams* temp = _impl_.osdparams_;
  _impl_.osdparams_ = nullptr;
  return temp;
}
inline ::MxTools::MxpiOsdParams* MxpiOsdLine::_internal_mutable_osdparams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.osdparams_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MxTools::MxpiOsdParams>(GetArena());
    _impl_.osdparams_ = reinterpret_cast<::MxTools::MxpiOsdParams*>(p);
  }
  return _impl_.osdparams_;
}
inline ::MxTools::MxpiOsdParams* MxpiOsdLine::mutable_osdparams() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::MxTools::MxpiOsdParams* _msg = _internal_mutable_osdparams();
  // @@protoc_insertion_point(field_mutable:MxTools.MxpiOsdLine.osdParams)
  return _msg;
}
inline void MxpiOsdLine::set_allocated_osdparams(::MxTools::MxpiOsdParams* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.osdparams_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.osdparams_ = reinterpret_cast<::MxTools::MxpiOsdParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:MxTools.MxpiOsdLine.osdParams)
}

// -------------------------------------------------------------------

// MxpiOsdRect

// repeated .MxTools.MxpiMetaHeader headerVec = 1;
inline int MxpiOsdRect::_internal_headervec_size() const {
  return _internal_headervec().size();
}
inline int MxpiOsdRect::headervec_size() const {
  return _internal_headervec_size();
}
inline ::MxTools::MxpiMetaHeader* MxpiOsdRect::mutable_headervec(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MxTools.MxpiOsdRect.headerVec)
  return _internal_mutable_headervec()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>* MxpiOsdRect::mutable_headervec()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MxTools.MxpiOsdRect.headerVec)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_headervec();
}
inline const ::MxTools::MxpiMetaHeader& MxpiOsdRect::headervec(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdRect.headerVec)
  return _internal_headervec().Get(index);
}
inline ::MxTools::MxpiMetaHeader* MxpiOsdRect::add_headervec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MxTools::MxpiMetaHeader* _add = _internal_mutable_headervec()->Add();
  // @@protoc_insertion_point(field_add:MxTools.MxpiOsdRect.headerVec)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>& MxpiOsdRect::headervec() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MxTools.MxpiOsdRect.headerVec)
  return _internal_headervec();
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>&
MxpiOsdRect::_internal_headervec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.headervec_;
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>*
MxpiOsdRect::_internal_mutable_headervec() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.headervec_;
}

// int32 x0 = 2;
inline void MxpiOsdRect::clear_x0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x0_ = 0;
}
inline ::int32_t MxpiOsdRect::x0() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdRect.x0)
  return _internal_x0();
}
inline void MxpiOsdRect::set_x0(::int32_t value) {
  _internal_set_x0(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdRect.x0)
}
inline ::int32_t MxpiOsdRect::_internal_x0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x0_;
}
inline void MxpiOsdRect::_internal_set_x0(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x0_ = value;
}

// int32 y0 = 3;
inline void MxpiOsdRect::clear_y0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y0_ = 0;
}
inline ::int32_t MxpiOsdRect::y0() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdRect.y0)
  return _internal_y0();
}
inline void MxpiOsdRect::set_y0(::int32_t value) {
  _internal_set_y0(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdRect.y0)
}
inline ::int32_t MxpiOsdRect::_internal_y0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y0_;
}
inline void MxpiOsdRect::_internal_set_y0(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y0_ = value;
}

// int32 x1 = 4;
inline void MxpiOsdRect::clear_x1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x1_ = 0;
}
inline ::int32_t MxpiOsdRect::x1() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdRect.x1)
  return _internal_x1();
}
inline void MxpiOsdRect::set_x1(::int32_t value) {
  _internal_set_x1(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdRect.x1)
}
inline ::int32_t MxpiOsdRect::_internal_x1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x1_;
}
inline void MxpiOsdRect::_internal_set_x1(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x1_ = value;
}

// int32 y1 = 5;
inline void MxpiOsdRect::clear_y1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y1_ = 0;
}
inline ::int32_t MxpiOsdRect::y1() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdRect.y1)
  return _internal_y1();
}
inline void MxpiOsdRect::set_y1(::int32_t value) {
  _internal_set_y1(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdRect.y1)
}
inline ::int32_t MxpiOsdRect::_internal_y1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y1_;
}
inline void MxpiOsdRect::_internal_set_y1(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y1_ = value;
}

// .MxTools.MxpiOsdParams osdParams = 6;
inline bool MxpiOsdRect::has_osdparams() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.osdparams_ != nullptr);
  return value;
}
inline void MxpiOsdRect::clear_osdparams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.osdparams_ != nullptr) _impl_.osdparams_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::MxTools::MxpiOsdParams& MxpiOsdRect::_internal_osdparams() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MxTools::MxpiOsdParams* p = _impl_.osdparams_;
  return p != nullptr ? *p : reinterpret_cast<const ::MxTools::MxpiOsdParams&>(::MxTools::_MxpiOsdParams_default_instance_);
}
inline const ::MxTools::MxpiOsdParams& MxpiOsdRect::osdparams() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdRect.osdParams)
  return _internal_osdparams();
}
inline void MxpiOsdRect::unsafe_arena_set_allocated_osdparams(::MxTools::MxpiOsdParams* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.osdparams_);
  }
  _impl_.osdparams_ = reinterpret_cast<::MxTools::MxpiOsdParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MxTools.MxpiOsdRect.osdParams)
}
inline ::MxTools::MxpiOsdParams* MxpiOsdRect::release_osdparams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MxTools::MxpiOsdParams* released = _impl_.osdparams_;
  _impl_.osdparams_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::MxTools::MxpiOsdParams* MxpiOsdRect::unsafe_arena_release_osdparams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MxTools.MxpiOsdRect.osdParams)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MxTools::MxpiOsdParams* temp = _impl_.osdparams_;
  _impl_.osdparams_ = nullptr;
  return temp;
}
inline ::MxTools::MxpiOsdParams* MxpiOsdRect::_internal_mutable_osdparams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.osdparams_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MxTools::MxpiOsdParams>(GetArena());
    _impl_.osdparams_ = reinterpret_cast<::MxTools::MxpiOsdParams*>(p);
  }
  return _impl_.osdparams_;
}
inline ::MxTools::MxpiOsdParams* MxpiOsdRect::mutable_osdparams() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::MxTools::MxpiOsdParams* _msg = _internal_mutable_osdparams();
  // @@protoc_insertion_point(field_mutable:MxTools.MxpiOsdRect.osdParams)
  return _msg;
}
inline void MxpiOsdRect::set_allocated_osdparams(::MxTools::MxpiOsdParams* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.osdparams_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.osdparams_ = reinterpret_cast<::MxTools::MxpiOsdParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:MxTools.MxpiOsdRect.osdParams)
}

// bool fixedArea = 7;
inline void MxpiOsdRect::clear_fixedarea() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fixedarea_ = false;
}
inline bool MxpiOsdRect::fixedarea() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdRect.fixedArea)
  return _internal_fixedarea();
}
inline void MxpiOsdRect::set_fixedarea(bool value) {
  _internal_set_fixedarea(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdRect.fixedArea)
}
inline bool MxpiOsdRect::_internal_fixedarea() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fixedarea_;
}
inline void MxpiOsdRect::_internal_set_fixedarea(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fixedarea_ = value;
}

// -------------------------------------------------------------------

// MxpiOsdCircle

// repeated .MxTools.MxpiMetaHeader headerVec = 1;
inline int MxpiOsdCircle::_internal_headervec_size() const {
  return _internal_headervec().size();
}
inline int MxpiOsdCircle::headervec_size() const {
  return _internal_headervec_size();
}
inline ::MxTools::MxpiMetaHeader* MxpiOsdCircle::mutable_headervec(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MxTools.MxpiOsdCircle.headerVec)
  return _internal_mutable_headervec()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>* MxpiOsdCircle::mutable_headervec()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MxTools.MxpiOsdCircle.headerVec)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_headervec();
}
inline const ::MxTools::MxpiMetaHeader& MxpiOsdCircle::headervec(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdCircle.headerVec)
  return _internal_headervec().Get(index);
}
inline ::MxTools::MxpiMetaHeader* MxpiOsdCircle::add_headervec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MxTools::MxpiMetaHeader* _add = _internal_mutable_headervec()->Add();
  // @@protoc_insertion_point(field_add:MxTools.MxpiOsdCircle.headerVec)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>& MxpiOsdCircle::headervec() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MxTools.MxpiOsdCircle.headerVec)
  return _internal_headervec();
}
inline const ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>&
MxpiOsdCircle::_internal_headervec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.headervec_;
}
inline ::google::protobuf::RepeatedPtrField<::MxTools::MxpiMetaHeader>*
MxpiOsdCircle::_internal_mutable_headervec() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.headervec_;
}

// int32 x0 = 2;
inline void MxpiOsdCircle::clear_x0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x0_ = 0;
}
inline ::int32_t MxpiOsdCircle::x0() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdCircle.x0)
  return _internal_x0();
}
inline void MxpiOsdCircle::set_x0(::int32_t value) {
  _internal_set_x0(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdCircle.x0)
}
inline ::int32_t MxpiOsdCircle::_internal_x0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x0_;
}
inline void MxpiOsdCircle::_internal_set_x0(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x0_ = value;
}

// int32 y0 = 3;
inline void MxpiOsdCircle::clear_y0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y0_ = 0;
}
inline ::int32_t MxpiOsdCircle::y0() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdCircle.y0)
  return _internal_y0();
}
inline void MxpiOsdCircle::set_y0(::int32_t value) {
  _internal_set_y0(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdCircle.y0)
}
inline ::int32_t MxpiOsdCircle::_internal_y0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y0_;
}
inline void MxpiOsdCircle::_internal_set_y0(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y0_ = value;
}

// int32 radius = 4;
inline void MxpiOsdCircle::clear_radius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_ = 0;
}
inline ::int32_t MxpiOsdCircle::radius() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdCircle.radius)
  return _internal_radius();
}
inline void MxpiOsdCircle::set_radius(::int32_t value) {
  _internal_set_radius(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdCircle.radius)
}
inline ::int32_t MxpiOsdCircle::_internal_radius() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.radius_;
}
inline void MxpiOsdCircle::_internal_set_radius(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_ = value;
}

// .MxTools.MxpiOsdParams osdParams = 5;
inline bool MxpiOsdCircle::has_osdparams() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.osdparams_ != nullptr);
  return value;
}
inline void MxpiOsdCircle::clear_osdparams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.osdparams_ != nullptr) _impl_.osdparams_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::MxTools::MxpiOsdParams& MxpiOsdCircle::_internal_osdparams() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MxTools::MxpiOsdParams* p = _impl_.osdparams_;
  return p != nullptr ? *p : reinterpret_cast<const ::MxTools::MxpiOsdParams&>(::MxTools::_MxpiOsdParams_default_instance_);
}
inline const ::MxTools::MxpiOsdParams& MxpiOsdCircle::osdparams() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdCircle.osdParams)
  return _internal_osdparams();
}
inline void MxpiOsdCircle::unsafe_arena_set_allocated_osdparams(::MxTools::MxpiOsdParams* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.osdparams_);
  }
  _impl_.osdparams_ = reinterpret_cast<::MxTools::MxpiOsdParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MxTools.MxpiOsdCircle.osdParams)
}
inline ::MxTools::MxpiOsdParams* MxpiOsdCircle::release_osdparams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MxTools::MxpiOsdParams* released = _impl_.osdparams_;
  _impl_.osdparams_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::MxTools::MxpiOsdParams* MxpiOsdCircle::unsafe_arena_release_osdparams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MxTools.MxpiOsdCircle.osdParams)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MxTools::MxpiOsdParams* temp = _impl_.osdparams_;
  _impl_.osdparams_ = nullptr;
  return temp;
}
inline ::MxTools::MxpiOsdParams* MxpiOsdCircle::_internal_mutable_osdparams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.osdparams_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MxTools::MxpiOsdParams>(GetArena());
    _impl_.osdparams_ = reinterpret_cast<::MxTools::MxpiOsdParams*>(p);
  }
  return _impl_.osdparams_;
}
inline ::MxTools::MxpiOsdParams* MxpiOsdCircle::mutable_osdparams() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::MxTools::MxpiOsdParams* _msg = _internal_mutable_osdparams();
  // @@protoc_insertion_point(field_mutable:MxTools.MxpiOsdCircle.osdParams)
  return _msg;
}
inline void MxpiOsdCircle::set_allocated_osdparams(::MxTools::MxpiOsdParams* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.osdparams_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.osdparams_ = reinterpret_cast<::MxTools::MxpiOsdParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:MxTools.MxpiOsdCircle.osdParams)
}

// -------------------------------------------------------------------

// MxpiOsdParams

// uint32 scalorB = 1;
inline void MxpiOsdParams::clear_scalorb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scalorb_ = 0u;
}
inline ::uint32_t MxpiOsdParams::scalorb() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdParams.scalorB)
  return _internal_scalorb();
}
inline void MxpiOsdParams::set_scalorb(::uint32_t value) {
  _internal_set_scalorb(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdParams.scalorB)
}
inline ::uint32_t MxpiOsdParams::_internal_scalorb() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scalorb_;
}
inline void MxpiOsdParams::_internal_set_scalorb(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scalorb_ = value;
}

// uint32 scalorG = 2;
inline void MxpiOsdParams::clear_scalorg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scalorg_ = 0u;
}
inline ::uint32_t MxpiOsdParams::scalorg() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdParams.scalorG)
  return _internal_scalorg();
}
inline void MxpiOsdParams::set_scalorg(::uint32_t value) {
  _internal_set_scalorg(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdParams.scalorG)
}
inline ::uint32_t MxpiOsdParams::_internal_scalorg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scalorg_;
}
inline void MxpiOsdParams::_internal_set_scalorg(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scalorg_ = value;
}

// uint32 scalorR = 3;
inline void MxpiOsdParams::clear_scalorr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scalorr_ = 0u;
}
inline ::uint32_t MxpiOsdParams::scalorr() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdParams.scalorR)
  return _internal_scalorr();
}
inline void MxpiOsdParams::set_scalorr(::uint32_t value) {
  _internal_set_scalorr(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdParams.scalorR)
}
inline ::uint32_t MxpiOsdParams::_internal_scalorr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scalorr_;
}
inline void MxpiOsdParams::_internal_set_scalorr(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scalorr_ = value;
}

// int32 thickness = 4;
inline void MxpiOsdParams::clear_thickness() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.thickness_ = 0;
}
inline ::int32_t MxpiOsdParams::thickness() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdParams.thickness)
  return _internal_thickness();
}
inline void MxpiOsdParams::set_thickness(::int32_t value) {
  _internal_set_thickness(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdParams.thickness)
}
inline ::int32_t MxpiOsdParams::_internal_thickness() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.thickness_;
}
inline void MxpiOsdParams::_internal_set_thickness(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.thickness_ = value;
}

// int32 lineType = 5;
inline void MxpiOsdParams::clear_linetype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linetype_ = 0;
}
inline ::int32_t MxpiOsdParams::linetype() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdParams.lineType)
  return _internal_linetype();
}
inline void MxpiOsdParams::set_linetype(::int32_t value) {
  _internal_set_linetype(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdParams.lineType)
}
inline ::int32_t MxpiOsdParams::_internal_linetype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.linetype_;
}
inline void MxpiOsdParams::_internal_set_linetype(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linetype_ = value;
}

// int32 shift = 6;
inline void MxpiOsdParams::clear_shift() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shift_ = 0;
}
inline ::int32_t MxpiOsdParams::shift() const {
  // @@protoc_insertion_point(field_get:MxTools.MxpiOsdParams.shift)
  return _internal_shift();
}
inline void MxpiOsdParams::set_shift(::int32_t value) {
  _internal_set_shift(value);
  // @@protoc_insertion_point(field_set:MxTools.MxpiOsdParams.shift)
}
inline ::int32_t MxpiOsdParams::_internal_shift() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shift_;
}
inline void MxpiOsdParams::_internal_set_shift(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shift_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace MxTools


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // MxpiOSDType_2eproto_2epb_2eh
